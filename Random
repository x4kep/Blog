1) Deep copying vs. shallow copying
  A deep copy means that all of the values of the new variable are copied and disconnected from the original variable.
  A shallow copy means that certain (sub-)values are still connected to the original variable.
  WHY
  We usually want to copy value when working with data so we don't have side effects ( use for Pure function )
  HOW
  Deep copy 
   -Use JSON.parse(JSON.stringify(object))
   -Use some framework ( lodash - cloneDeep ) ( AngularJS - angular.copy )
  Shallow copy
   -Spred operator {...obj}
   -arr1.slice(0)
   -arr1.concat(arr2)
   -Object.create({}, obj}
   -Object.assign({}, obj}
   -Array.from(ar1)  
   
2) JavaScript is Synchronous
Spoiler: at its base, JavaScript is a synchronous, blocking, single-threaded language. That just means that only one operation can be in progress at a time.

3) Javascript Array functions 
   -map
   -filter
   -forEach
   -some
   -includes
   -reduce
   -sort
   -find
   -findIndex
   -every
   
 4) Arrow funnction THIS
    - Method inside object if method is diffined using arrow function this will refering to that Object.
      ( innside of Object ) - Good use of arrow avoid using _self = this 
    - Method outside object will refer too Windows object. 
      ( inside window global object) - Avoid arrow function because this will ref to global window
    - uses this Value of the enclosing lexical scope

5) Bind, Apply, Call 
   - Give us control of what should this be inside of calling function

